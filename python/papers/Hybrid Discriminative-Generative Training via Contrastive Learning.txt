Hybrid Discriminative-Generative Training via
Contrastive Learning
Hao Liu, Pieter Abbeel
University of California, Berkeley
{hao.liu, pabbeel}@cs.berkely.edu
Abstract
Contrastive learning and supervised learning have both seen significant progress
and success. However, thus far they have largely been treated as two separate
objectives, brought together only by having a shared neural network. In this paper
we show that through the perspective of hybrid discriminative-generative training of
energy-based models we can make a direct connection between contrastive learning
and supervised learning. Beyond presenting this unified view, we show our specific
choice of approximation of the energy-based loss outperforms the existing practice
in terms of classification accuracy of WideResNet on CIFAR-10 and CIFAR-100.
It also leads to improved performance on robustness, out-of-distribution detection,
and calibration.
1 Introduction
In the past few years, the field of deep supervised learning has seen significant progress. Example
successes include large-scale image classification [14, 41, 43, 44] on the challenging ImageNet
benchmark [5]. The common objective for solving supervised machine learning problems is to
minimize the cross-entropy loss, which is defined as the cross entropy between a target distribution
and a categorical distribution called Softmax which is parameterized by the model’s real-valued
outputs known as logits. The target distribution usually consists of one-hot labels. There has been a
continuing effort on improving upon the cross-entropy loss, various methods have been proposed,
motivated by different considerations [18, 31, 44].
Recently, contrastive learning has achieved remarkable success in representation learning. Contrastive
learning allows learning good representations and enables efficient training on downstream tasks,
an incomplete list includes image classification [2, 3, 9, 15, 35], video understanding [13], and
knowledge distillation [45]. Many different training approaches have been proposed to learn such
representations, usually relying on visual pretext tasks. Among them, state-of-the-art contrastive
methods [15, 2, 4] are trained by reducing the distance between representations of different augmented
views of the same image (‘positive pairs’), and increasing the distance between representations of
augment views from different images (‘negative pairs’).
Despite the success of the two objectives, they have been treated as two separate objectives, brought
together only by having a shared neural network.
In this paper, to show a direct connection between contrastive learning and supervised learning,
we consider the energy-based interpretation of models trained with cross-entropy loss, building
on Grathwohl et al. [8]. We propose a novel objective that consists of a term for the conditional of
the label given the input (the classifier) and a term for the conditional of the input given the label. We
optimize the classifier term the normal way. Different from Grathwohl et al. [8], we approximately
optimize the second conditional over the input with a contrastive learning objective instead of a
Preprint. Under review.
ar
X
iv
:2
00
7.
09
07
0v
1 
 [
cs
.L
G
] 
 1
7 
Ju
l 
20
20
Monte-Carlo sampling-based approximation. In doing so, we provide a unified view on existing
practice.
Our work takes inspiration from the work by Ng & Jordan [33]. In their 2002 paper, Ng & Jordan
[33] showed that classifiers trained with a generative loss (i.e., optimizing p(x|y), with x the input
and y the classification label) can outperform classifiers with the same expressiveness trained with a
discriminative loss (i.e., optimizing p(y|x)). Later it was shown that hybrid discriminative generative
model training can get the best of both worlds [37]. The work by Ng & Jordan [33] was done in the
(simpler) context of Naive Bayes and Logistic Regression. Our work can be seen as lifting this work
into today’s context of training deep neural net classifiers.
We extensively evaluate our approach on image classification tasks, out-of-distribution detection,
adversarial robustness, and calibration. The experiment shows that this novel loss improves classifica-
tion accuracy of WideResNet-28-10 [50] on CIFAR-10 and CIFAR-100 datasets and outperforms
state-of-the-art supervised learning and contrastive learning methods. The method also significantly
improves the performance of WideResNet-28-10 on robustness, out-of-distribution detection, and
calibration compared with generative models and hybrid models.
2 Background
2.1 Supervised learning
In supervised learning, given a data distribution p(x) and a label distribution p(y|x) withC categories,
a classification problem is typically addressed using a parametric function, fθ : RD → RC , which
maps each data point x ∈ RD to C real-valued numbers termed as logits. These logits are used to
parameterize a categorical distribution using the Softmax function:
qθ(y|x) =
exp(fθ(x)[y])∑
y′ exp(fθ(x)[y
′])
, (1)
where fθ(x)[y] indicates the yth element of fθ(x), i.e., the logit corresponding to the yth class label.
One of the most widely used loss functions for learning fθ is minimizing the negative log likelihood:
min
θ
−Epdata(x,y) [log qθ(y|x)] . (2)
This loss function is often referred to as the cross-entropy loss function, because it corresponds to
minimizing the KL-divergence with a target distribution p(y|x), which consists of one-hot vectors
with the non-zero element denoting the correct prediction.
2.2 Energy-based models
Energy-based models. Energy based models (EBMs) [25] are based on the observation that proba-
bility densities p(x) for x ∈ RD can be expressed as
pθ(x) =
exp(−Eθ(x))
Z(θ)
, (3)
where Eθ(x) : RD → R maps each data point to a scalar; and Z(θ) =
∑
x∈X exp(−Eθ(x)) (or, for
continuous x we’d have Z(θ) =
∫
x∈X exp(−Eθ(x))) is the normalizing constant, also known as the
partition function. Here X is the full domain of x. For example, in the case of (let’s say) 16x16 RGB
images, computing Z exactly would require a summation over (256× 256× 256)(16×16) ≈ 102500
terms.
We can parameterize an EBM using any function that takes x as the input and returns a scalar. For
most choices of Eθ, one cannot compute or even reliably estimate Z(θ), which means estimating the
normalized densities is intractable and standard maximum likelihood estimation of the parameters, θ,
is not straightforward.
Training EBMs. The log-likelihood objective for an EBM consists of a sum of log pθ(x) terms, one
term for each data point x. The gradient of each term is given by:
∂ log pθ(x)
∂θ
= Epθ(x′)
[
∂Eθ(x
′)
∂θ
]
− ∂Eθ(x)
∂θ
, (4)
2
where the expectation is over the model distribution pθ(x′). This expectation is typically intractable
(for much the same reasons computing Z(θ) is typically intractable). However, it can be approximated
through samples–assuming we can sample from pθ. Generating exact samples from pθ is typically
expensive, but there are some well established approximate (sometimes exact in the limit) methods
based on MCMC [8, 6, 19].
Among such sampling methods, recent success in training (and sampling from) energy-based models
often relies on the Stochastic Gradient Langevin Dynamics (SGLD) approach [47], which generates
samples by following this stochastic process:
x0 ∼ p0(x), xi+1 = xi −
α
2
∂Eθ(xi)
∂xi
+ �, � ∼ N (0, α) (5)
where N (0, α) is the normal distribution with mean of 0 and standard deviation of α, and p0(x)
is typically a Uniform distribution over the input domain and the step-size α should be decayed
following a polynomial schedule. The SGLD sampling steps are tractable, assuming the gradient of
the energy function can be computed with respect to x, which is often the case. It is worth noting this
process does not require evaluation the partition function Z(θ) (or any derivatives thereof).
Joint Energy Models. The joint energy based model (JEM) [8] shows that classifiers in supervised
learning are secretly also energy-based based models on p(x, y). The key insight is that the logits
fθ(x)[y] in the supervised cross-entropy loss can be seen as defining an energy-based model over
(x, y), as follows:
p(x, y) =
exp(fθ(x)[y])
Z(θ)
, (6)
where Z(θ) is the unknown normalization constant. I.e., matching this with the typical EBM notation,
we have fθ(x)[y] = −Eθ(x, y). Subsequently, the density model of data points p(x) can be obtained
by marginalizing over y:
p(x) =
∑
y exp(fθ(x)[y])
Z(θ)
, (7)
with the energy Eθ(x) = − log
∑
y exp(fθ(x)[y]). JEM [8] adds the marginal log-likelihood p(x)
to the training objective, where p(x) is expressed with the energy based model from Equation (7).
JEM uses SGLD sampling for training.
2.3 Contrastive Learning
In contrastive learning [11, 12, 30, 28], it is common to optimize an objective of the following form:
min
θ
−Epdata(x)
[
log
exp(hθ(x) · hθ(x′))∑K
i=1 exp(hθ(x) · hθ(xi))
]
, (8)
where x and x′ are two different augmented views of the same data point, hθ : RD → RH maps each
data point to a representation space with dimension H . The inner product between two vectors is
a specific choice of distance metric and is shown to work well in practice [48, 38]. Other distance
metrics, such as Euclidean distance, have also been used.
This objective tries to maximally distinguish an input xi from alternative inputs x′i. The intuition is
that by doing so, the representation captures important information between similar data points, and
therefore might improve performance on downstream tasks. This is usually called the contrastive
learning loss or InfoNCE loss [35] and has achieved remarkable success in representation learning [9,
15, 4, 21].
In practice, using a contrastive loss for representation learning requires either large batch sizes [2]
or memory banks [48, 15, 4]. Although the K normalization examples in principle could be any
samples [12], in practice, one often uses different augmented samples within the same batch or
samples from a memory bank.
In the context of supervised learning, the Supervised Contrastive Loss [21] shows that selecting xi
from different categories as negative examples can improve the standard cross-entropy training. Their
3
objective for learning the representation hθ(x) is given by:
min
θ
−Epdata(x)
[
log
exp(hθ(x) · hθ(x′))∑K
i=1 exp(hθ(x) · hθ(xi))1[y 6= yi]
]
. (9)
We’ll see that our approach outperforms Supervised Contrastive Learning from [21], while also
simplifying by removing the need for selecting negative examples or pre-training a representation.
Through the simplification we might get a closer hint at where the leverage is coming from.
3 Hybrid Discriminative Generative Energy-based Model (HDGE)
As in the typical classification setting, we assume we are given a dataset (x, y) ∼ pdata. The primary
goal is to train a model that can classify (x to y). In addition, we would like the learned model to
be capable of out-of-distribution detection, providing calibrated outputs, and serving as a generative
model.
To achieve these goals, we propose to train a hybrid model, which consists of a discriminative
conditional and a generative conditional by maximizing the sum of both conditional log-likelihoods:
min
θ
−Epdata(x,y) [log qθ(y|x) + log qθ(x|y)] , (10)
where qθ(y|x) is a standard Softmax neural net classifier, and where qθ(x|y) = exp(fθ(x)[y])Z(θ) , with
Z(θ) =
∑
x exp(fθ(x)[y]).
The rationale for this objective originates from [33, 37], where they discuss the connections between
logistic regression and naive Bayes, and show that hybrid discriminative and generative models can
out-perform purely generative or purely discriminative counterparts.
The main challenge with the objective from Equation (10) is the intractable partition function Z(θ).
Our main contribution is to propose a (crude, yet experimentally effective) approximation with a
contrastive loss:
Epdata(x,y) [log qθ(x|y)] (11)
= Epdata(x,y)
[
log
exp(fθ(x)[y])
Z(θ)
]
(12)
≈ Epdata(x,y)
[
log
exp(fθ(x)[y])∑K
i=1 exp(fθ(xi)[y])
]
, (13)
whereK denotes the number of normalization samples. This is similar to existing contrastive learning
objectives, although in our formulation, we also use labels.
Intuitively, in order to have an accurate approximation in Equation (13), K has to be sufficiently
large—becoming exact in the limit of summing over all x ∈ X . We don’t know of any formal
guarantees for our proposed approximation, and ultimately the justification has to come from our
experiments. Nevertheless, there are two main intuitions we considered: (i) We try to make K as
large as is practical. Increasing K is not trivial as it requires a larger memory. To still push the
limits, following He et al. [15] we use a memory bank to store negative examples. More specifically,
we resort to using a queue to store past logits, and sample normalization examples from this queue
during the training process. (ii) While in principle we would need to sum over all possible x ∈ X , we
could expect to achieve a good approximation by focusing on (x, y) that have low energy. Since the
training examples xi are encouraged to have low energy, we draw from those for our approximation.
It is worth noting that the training examples xi, yi are getting incorporated in the denominator using
the same label y as in the numerator. So effectively this objective is (largely) contrasting the logit
value fθ(x)[y] for x with label y from the logit values of other training examples xi that don’t have
the same label y.
4
To bring it all together, our objective can be seen as a hybrid combination of supervised learning and
contrastive learning given by:
min
θ
−Epdata(x,y) [α log qθ(y|x) + (1− α) log qθ(x|y)] (14)
≈ min
θ
−Epdata(x,y)
[
α log
exp(fθ(x)[y])∑
y′ exp(fθ(x)[y
′])
+ (1− α) log exp(fθ(x)[y])∑K
i=1 exp(fθ(xi)[y])
]
, (15)
where α is weight between [0, 1]. When α = 1, the objective reduces to the standard cross-entropy
loss, while α = 0, it reduces to an end-to-end supervised version of contrastive learning. We
evaluated these variants in experiments, and we found that α = 0.5 delivers the highest performance
on classification accuracy as well as robustness, calibration, and out-of-distribution detection.
The resulting model, dubbed Hybrid Discriminative Generative Energy-based Model (HDGE), learns
to jointly optimize supervised learning and contrastive learning. The corresponding pseudo code in
PyTorch-like [36] style is in Algorithm 1.
Algorithm 1 Pseudocode of HDGE in a PyTorch-like style.
# f: encoder networks for images
# queue: queue of probabilities (KxC)
# B: batch size; K: queue size; C:
number of classes; m: momentum; t:
temperature
for x, y in loader: # load a minibatch
with B images x and labels y
x = aug(x) # optionally randomly
data augmentation
y = t(y) # transform to one-hot
vector with dimension C
# logits: KxC
ce_logits = f.forward(x)
# standard cross-entropy loss
# optimize log q(y|x)
ce_loss =
CrossEntropyLoss(ce_logits, y)
# normalize logits by L2 or
softmax: KxC
probs = normalize(ce_logits)
# positive logits: Bx1
l_pos = logsumexp(probs*y, dim=1,
keepdim=True)
# negative logits: BxK
l_neg = einsum("nc,ck->nck",
[probs, queue.clone().detach()]) #
BxCxK
l_neg = logsumexp(l_neg, dim=1) #
BxK
# logits: Bx(1+K)
logits = cat([l_pos, l_neg], dim=1)
# positives are the 0-th
labels = zeros(K)
# contrastive loss
# optimize log q(x|y)
cl_loss =
CrossEntropyLoss(logits/t, labels)
# hybrid training
loss = ce_loss + cl_loss
# SGD update: encoder network
loss.backward()
update(f.params)
# update buffer
enqueue(queue, probs) # enqueue
the current minibatch of probs
dequeue(queue) # dequeue the
earliest minibatch
einsum: Einstein sum; cat: concatenation; logsumexp: LogSumExp operation.
4 Experiment
In our experiments, we are interested in answering the following questions:
• Does HDGE improve classification accuracy over the state-of-the-art supervised learning
loss? (Section 4.1)
• Does HDGE improve the out-of-distribution detection? (Section 4.2)
• Does HDGE add better calibration to the model? (Section 4.3)
• Does HDGE lead to a model with better adversarial robustness? (Section 4.4)
• How much does the number of negative examples affect HDGE performance? (Section 4.5)
• Is HDGE able to improve the generative modeling performance? (Section 4.6)
To do so, we completed a thorough empirical investigation on several standard datasets: CIFAR-10
and CIFAR-100 [23], two labeled datasets composed of 32 × 32 images with 10 and 100 classes
5
respectively (Sections 4.1, 4.2, 4.3 and 4.6); SVHN [32], a labeled dataset composed of over 600, 000
digit images (Section 4.2); CelebA [26], a labeled dataset consisting of over 200, 000 face images
and each with 40 attribute annotation (Section 4.2).
Our experiments are based on WideResNet-28-10 [50], where we compare HDGE against the state-of-
the-art cross-entropy loss, against the hybrid method JEM [8], and against the Supervised Contrastive
Loss [21]. We will use K = 65536 throughout the experiments if not otherwise mentioned and
temperature τ = 0.1. The cross-entropy baseline is based on the code from the official PyTorch
training code 1. HDGE’s implementation is based on the official codes of MoCo 2 and JEM 3.
4.1 Image classification
We compare HDGE with
• The supervised learning baseline uses the standard cross-entropy loss. We follow the settings
of Zagoruyko & Komodakis [50] for evaluation on CIFAR-10 and CIFAR-100, and we
decay the learning rate by 0.2 at epoch 60, 120, 160.
• Supervised Contrastive Learning from [21], which proposes to use label information to
select negative examples at the contrastive pre-training stage, and shows incorporating the
label information helps the downstream supervised training of classifiers. We adapt the
official implementation of the Supervised Contrastive Loss4 to use WideResNet.
• JEM from [8], which proposes to incorporate energy-based modeling training with the
standard cross-entropy loss.
As reported in Table 1, HDGE outperforms standard Supervised Learning (which uses only the
qθ(y|x) loss term), outperforms Supervised Contrastive Learning from Khosla et al. [21] (which uses
a different approximation to the qθ(y|x)), outperforms JEM (which uses the classification loss on
qθ(y|x) supplemented with a loss on the marginal qθ(x)), and outperforms HDGE with log qθ(x|y)
(which only trains the generative loss term). This shows the benefit of hybrid discriminative and gen-
erative model via jointly optimizing the discriminative (classifier) loss and the generative (contrastive)
loss.
In addition, when studying methods that only have the generative term qθ(x|y), we see that HDGE
(log qθ(x|y) only) achieves higher accuracy than Khosla et al. [21], which indicates our method
provides an improved generative loss term.
Method
Dataset
Supervised
Learning
Supervised
Contrastive JEM
HDGE (ours)
HDGE
(log qθ(x|y) only)
CIFAR10 95.8 96.3 94.4 96.7 96.4
CIFAR100 79.9 80.5 78.1 80.9 80.6
Table 1: Comparison on three standard image classification datasets: All models use the same batch size
of 256 and step-wise learning rate decay, the number of training epochs is 200. The baselines Supervised
Contrastive [21], JEM [8], and our method HDGE are based on WideResNet-28-10 [50].
4.2 Out-of-distribution detection
We conduct experiments to evaluate HDGE on out-of-distribution (OOD) detection tasks. In general,
OOD detection is a binary classification problem, where the model is required to produce a score
sθ(x) ∈ R,
1https://github.com/szagoruyko/wide-residual-networks/tree/master/pytorch
2https://github.com/facebookresearch/moco
3https://github.com/wgrathwohl/JEM
4https://github.com/HobbitLong/SupContrast
6
where x is the query, and θ is the model parameters. We desire that the scores for in-distribution
examples are higher than that out-of-distribution examples. Following the setting of Grathwohl et al.
[8], we use the area under the receiver-operating curve (AUROC) [16] as the evaluation metric. In
our evaluation, we will consider two different score functions, the input density p(x) (Section 4.2.1)
and the predictive distribution p(y|x) (Section 4.2.2)
4.2.1 Input density p(x)
Prior work show that fitting a density model on the data and consider examples with low likelihood
to be OOD is effective, and the likelihoods from EBMs can be reliably used as a predictor for OOD
inputs [6, 8]. We are interested in whether HDGE results in better likelihood function for OOD
detection. All the methods are based on the WideResNet-28-10 [50]. We follow the same experiment
settings of Grathwohl et al. [8] to remove the batch normalization (BN) [20] in WideResNet-28-10.
In addition to standard discriminative models and hybrid model JEM, we also compare HDGE with
• Glow [22] which is a compelling flow-based generative model.
• IGEBM [6] which proposes a method for training EBMs for high dimensional data, and
shows training EBMs improves likelihood-based OOD detection.
The results are shown in Table 2 (top), HDGE consistently outperforms all of the baselines. The
corresponding distribution of score are visualized in Figure 1, it shows that HDGE correctly assign
lower scores to out-of-distribution samples and performs extremely well on detecting samples from
SVHN, CIFAR-100, and CelebA.
We believe that the improvement of HDGE over JEM is due to compared with SGLD sampling
based methods, HDGE holds the ability to incorporate a large number and diverse samples and their
corresponding labels information to train the generative conditional log p(x|y).
Out-of-distribution
sθ(x) Model SVHN Interp CIFAR100 CelebA
log p(x)
WideResNet-28-10 .46 .41 .47 .49
Unconditional Glow .05 .51 .55 .57
Class-Conditional Glow .07 .45 .51 .53
IGEBM .63 .70 .50 .70
JEM .67 .65 .67 .75
HDGE (ours) .96 .82 .91 .80
maxy p(y|x)
WideResNet-28-10 .93 .77 .85 .62
Contrastive pretraining .87 .65 .80 .58
Class-Conditional Glow .64 .61 .65 .54
IGEBM .43 .69 .54 .69
JEM .89 .75 .87 .79
HDGE (ours) .95 .76 .84 .81
Table 2: OOD Detection Results. The model is WideResNet-28-10 (without BN). The training dataset is
CIFAR-10. Values are AUROC. Results of the baselines are from Grathwohl et al. [8].
4.2.2 Predictive Distribution p(y|x)
A widely used OOD score function is the maximum prediction probability [16] which is given by
sθ(x) = maxy pθ(y|x). Intuitively, a model with high classification accuracy tends to has a better
OOD performance using this score function.
We compare with HDGE with standard discriminative models, generative models, and hybrid models.
We also evaluate a contrastive pre-training baseline which consists of learning a representation via
contrastive learning and training a linear classifier on top of the representation.
The results of OOD detection are show in Table 4.2 (bottom). We find HDGE performs beyond
the performance of a strong baseline classifier and considerably outperforms all other generative
modeling and hybrid modeling methods.
7
HDGE
Score
Fr
eq
ue
nc
y
cifar10
celeba
Score
Fr
eq
ue
nc
y
cifar10
svhn
Score
Fr
eq
ue
nc
y
cifar10
cifar100
Score
Fr
eq
ue
nc
y
cifar10
cifar10interp
JEM
Score
Fr
eq
ue
nc
y
cifar10
celeba
Score
Fr
eq
ue
nc
y
cifar10
svhn
Score
Fr
eq
ue
nc
y
cifar10
cifar100
Score
Fr
eq
ue
nc
y
cifar10
cifar10interp
Figure 1: Histograms for OOD detection using density p(x) as score function. The model is WideResNet-
28-10 (without BN). Green corresponds to the score on (in-distribution) training dataset CIFAR-10, and red
corresponds to the score on the testing dataset. The cifar10interp denotes a dataset that consists of a linear
interpolation of the CIFAR-10 dataset.
The OOD detection evaluation shows that it is helpful to jointly train the generative model p(x|y)
together with the classifier p(y|x) to have a better classifier model. HDGE provides an effective and
simple approach to improve out-of-distribution detection.
4.3 Calibration
Calibration plays an important role when deploy the model in real-world scenarios where outputting
an incorrect decision can have catastrophic consequences [10]. The goodness of calibration is
usually evaluated in terms of the Expected Calibration Error (ECE), which is a metric to measure the
calibration of a classifier.
It works by first computing the confidence, maxy p(y|xi), for each xi in some dataset and then
grouping the items into equally spaced buckets {Bm}Mm=1 based on the classifier’s output confidence.
For example, if M = 20, then B0 would represent all examples for which the classifier’s confidence
was between 0.0 and 0.05. The ECE is defined as following:
ECE =
M∑
m=1
|Bm|
n
|acc(Bm)− conf(Bm)|, (16)
where n is the number of examples in the dataset, acc(Bm) is the averaged accuracy of the classifier
of all examples in Bm and conf(Bm) is the averaged confidence over all examples in Bm. For a
perfectly calibrated classifier, this value will be 0 for any choice of M . Following Grathwohl et al. [8],
we choose M = 20 throughout the experiments. A classifier is considered calibrated if its predictive
confidence, maxy p(y|x), aligns with its misclassification rate. Thus, when a calibrated classifier
predicts label y with confidence score that is the same at the accuracy.
0.0 0.5 1.0
Accuracy
0.0
0.5
1.0
C
o
n
fi
d
en
ce
Baseline
ACC=74.2%
ECE=22.15%
0.0 0.5 1.0
Accuracy
0.0
0.5
1.0
C
o
n
fi
d
en
ce
JEM
ACC=72.2%
ECE=4.88%
0.0 0.5 1.0
Accuracy
0.0
0.5
1.0
C
o
n
fi
d
en
ce
HDSE
ACC=74.5%
ECE=4.62%
Figure 2: CIFAR-100 calibration results. The model is WideResNet-28-10 (without BN). Expected calibration
error (ECE) [10] on CIFAR-100 dataset under various training losses.
We evaluate the methods on CIFAR-100 where we train HDGE and baselines of the same architecture,
and compute the ECE on hold-out datasets. The histograms of confidence and accuracy of each
method are shown in Figure 2.
While classifiers have grown more accurate in recent years, they have also grown considerably less
calibrated [10], as shown in the left of Figure 2. Grathwohl et al. [8] significantly improves the
8
calibration of classifiers by optimizing p(x) as EBMs training (Figure 2 middle), however, their
method is computational expensive due to the contrastive divergence and SGLD sampling process
and their training also sacrifices the accuracy of the classifiers. In contrast, HDGE provides a
computational feasible method to significantly improve both the accuracy and the calibration at the
same time (Figure 2 right).
4.4 Adversarial robustness
1 6 11 16 21 26 31
�
0
20
40
60
80
A
cc
u
ra
cy
(%
)
Baseline
JEM
Adv Training
HDSE
(a) L∞ Robustness
0 100 200 300 400 500
�
0
20
40
60
80
A
cc
u
ra
cy
(%
)
Baseline
Adv Training
JEM
HDSE
(b) L2 Robustness
Figure 3: Adversarial robust-
ness results with PGD attacks.
HDGE adds considerable robust-
ness to standard supervised train-
ing and achieves comparable ro-
bustness with JEM.
While image classifiers have seen many progress in accuracy, they
are known to be sensitive to perturbation-based adversarial examples
on input [7]. These examples exploit the model’s sensitivity to
semantically meaningless perturbations: while examples are closed
to real inputs in datasets in terms of a given metric, they don not
necessarily reside within areas of high density according to the model
distribution, therefore, the model can wrongly classify these rarely
encountered inputs. In order to deploy the classification systems to
real-world applications, such as pedestrian detection and traffic sign
recognition on autonomous cars, it is extremely important to develop
models that are robust to adversarial examples.
The commonly considered adversarial attack is the Lp-norm con-
strained adversarial examples, which are defined as x̂ ∈ B(x, �) that
changes the model’s prediction, where B(x, r) denotes a ball cen-
tered at x with radius r under the Lp-norm metric. In this work, we
run white-box PGD (projected gradient descent) attack with respect
to the L2 and L∞ norms, giving the attacker access to gradients, in
which PGD is used to find a local maximal within a given perturba-
tion ball [27]. We train HDGE and compare with the state-of-the-art
adversarial training methods.
• Adv Training [27, 40] which proposes to use robust opti-
mization to train classifier to be robust to the norm through
which it is being attacked.
Results from the PGD experiments can be seen in Figure 3. We can see that HDGE can achieve
compelling robustness to the state-of-the-art adversarial training methods.
We note that while JEM improves the robustness too by optimizing the likelihood of EBMs, it requires
computationally expensive SGLD sampling procedure. In contrast, HDGE significantly improves the
robustness of standard classifiers by computationally scalable contrastive learning.
4.5 Goodness of approximation
64 256 2048 8192 65536
K (log-scale)
65
70
75
80
85
A
cc
u
ra
cy
(%
)
Baseline
HDSE
HDSE(log q(x|y) only)
Figure 4: Accuracy compari-
son with respect to different K
on CIFAR-100. The baseline
is standard cross-entropy loss.
The model is WideResNet-28-10.
Batch size is 256.
Since we made the approximation to energy-based model by con-
trastive learning in Equation (13), we are interested in evaluating the
impact of the number of negative examplesK on the goodness of this
approximation. We consider a classification task and a density based
OOD detection task as proxies of evaluating the approximation.
Classification. We compare the image classification of HDGE on
CIFAR-100. The results are shown in Figure 4. We found that
increasing number of negative samples K improves the performance
of HDGE, and with sufficient number of negative examples HDGE
significantly outperform the cross-entropy loss. The reason may be
training with many negative examples helps to discriminate between
positive and negative samples.
OOD detection. We evaluate HDGE with different value of K
by running experiments on the log p(x) based OOD tasks, we use the same experiments setting
as Section 4.2.
9
We vary the batch size of SGLD sampling process in Grathwohl et al. [8], effectively, we change the
number of samples used to estimate the derivative of the normalization constant Epθ(x′)
[
∂Eθ(x
′)
∂θ
]
in
the JEM update rule Equation (4). Specifically, we increase the default batch size N from 64 to 128
and 256, due to running the SGLD process is memory intensive and the technique constraints of the
limited CUDA memory, we were unable to further increase the batch size. We also decrease K in
HDGE to {64, 128, 256} to study the effect of approximation.
The results are shown in Table 3, the results show that HDGE with a small K performs fairly
well except on CelebA probably due to the simplicity of other datasets. We note HDGE(K = 64)
outperforms JEM and three out of four datasets, which shows the approximation in HDGE is
reasonable good. While increasing batch size of JEM improves the performance, we found increasing
K in HDGE can more significantly boost the performance on all of the four datasets. We note JEM
with a large batch size is significantly more computational expensive than HDGE, as a result JEM
runs more slower than HDGE with the largest K.
Out-of-distribution
sθ(x) Model SVHN Interp CIFAR100 CelebA
log p(x)
JEM (N = 64) (default) .67 .65 .67 .75
JEM (N = 128) .69 .67 .68 .75
JEM (N = 256) .70 .69 .68 .76
HDGE (K = 64) .89 .79 .84 .62
HDGE (K = 128) .91 .80 .89 .73
HDGE (K = 256) .93 .81 .90 .76
HDGE (K = 65536) (default) .96 .82 .91 .80
Table 3: Ablation of approximation on detecting OOD samples. We use CIFAR 10 for in-distribution.
4.6 Generative modeling tasks
Class Model Accuracy% ↑ IS↑ FID↓
Hybrid
Residual Flow 70.3 3.6 46.4
Glow 67.6 3.92 48.9
IGEBM 49.1 8.3 37.9
JEM 92.9 8.76 38.4
HDGE 94.6 N/A N/A
HDGE+JEM 94.4 9.19 37.6
Disc. WideResNet 95.8 N/A N/A
WideResNet(w/o BN) 93.6 N/A N/A
Gen. SNGAN N/A 8.59 25.5
NCSN N/A 8.91 25.32
Table 4: Hybrid modeling results on CIFAR-10. All models
are based on WideResNet-28-10 [50](without BN). Residual
Flow [1], Glow [22], IGEBM [6], SNGAN [29], NCSN [42],
JEM [8]
Figure 5: Class-conditional samples
generated by running HDGE + JEM on
CIFAR-10.
HDGE models can be sampled from with SGLD. However, during experiments we found that adding
the marginal log-likelihood over x (as done in JEM) improved the generation. we hypothesis that
this is due the approximation via contrastive learning focuses on discriminating between images of
different categories rather than estimating density.
So we evaluated generative modeling through SGLD sampling from a model trained with the
following objective:
min
θ
Epdata(x,y) [log qθ(y|x) + log qθ(x|y) + log qθ(x)] , (17)
where log qθ(x) is optimized by running SGLD sampling and contrastive divergence as in JEM and
log qθ(y|x) + log qθ(x|y) is optimized through HDGE.
10
We train this approach on CIFAR-10 and compare against other hybrid models as well as standalone
generative and discriminative models. We present inception scores (IS) [39] and Frechet Inception
Distance (FID) [17] given that we cannot compute normalized likelihoods. The results are shown
in Table 4 and Figure 5.
The results show that jointly optimizing log qθ(y|x) + log qθ(x|y) + log qθ(x) by HDGE (first two
terms) and JEM (third term) together can outperform optimizing log qθ(y|x)+ log qθ(x) by JEM, and
it significantly improves the generative performance over the state of the art in generative modeling
methods and retains high classification accuracy simultaneously. We believe the superior performance
of HDGE + JEM is due to the fact that HDGE learns a better classifier and JEM can exploit it and
maybe optimizing log p(x|y) via HDGE is a good auxiliary objective.
5 Related work
Prior work [21] connects supervised learning with contrastive learning by using label information to
cluster positive and negative examples, and show improved image classification and hyperparameters
robustness in contrastive learning. Their work applied to learning a representation for downstream
tasks, while this work introduces an end-to-end framework of contrastive learning that leverages
label information for supervised learning, and show improved performance on discriminative and
generative modeling tasks.
Ng & Jordan [33], Raina et al. [37], Lasserre et al. [24] compare and study the connections and
differences between discriminative model and generative model, and shows hybrid generative dis-
criminative models can outperform purely discriminative models and purely generative models. This
work differs in that we provide an effective training approach to optimize the hybrid model, motivated
from the energy-based models.
Xie et al. [49], Du & Mordatch [6] demonstrate the EBMs can be derived from classifiers, they
reinterpret the logits to define a class-conditional EBM p(x|y), Grathwohl et al. [8] shows the
alternative class-conditional EBM p(y|x) leads to significant improvement in generative modeling
while retain compelling classification accuracy. Our method HDGE is built upon Grathwohl et al. [8]
which shows a standard classifier are secretly a generative model. The likelihood p(x) in Grathwohl
et al. [8] is trained by using Contrastive Divergence [46] and SGLD [47], we reveal that the likelihood
p(x) can be approximated by contrastive learning, and this novel loss leads to significant improvement
in various applications. We note optimizing our loss function is more computational efficient than
training EBMs on high-dimensional data Grathwohl et al. [8] and this training does not suffer from
numerical stability issues. While there are advances in scaling the training of EBMs to to high-
dimensional data [34, 6, 8], it remains computational expensive and often costs orders magnitude
of more time and computation to training EBMs and therefore makes it difficult to scale. On the
contrary HDGE holds the promise to scale more gracefully, which makes it a promising direction to
apply EBMs to even wider applications.
6 Conclusion
In this work, we develop HDGE, a new framework for supervised learning and contrastive learning
through the perspective of hybrid discriminative and generative model. We propose to leverage
contrastive learning to approximately optimize the model for discriminative and generative tasks, and
effectively take advantage of the large number of samples from different classes. Our framework
provides a simple, scalable and general method for solving supervised and contrastive machine
learning problems.
7 Acknowledgement
This research was supported by DARPA Data-Driven Discovery of Models (D3M) program. We
would like to thank Will Grathwohl, Kuan-Chieh Wang, Kimin Lee, Qiyang Li, Misha Laskin, and
Jonathon Ho for improving the presentation and giving constructive comments. We would also like
to thank Aravind Srinivas for providing tips on training models. We would also like to thank Kimin
Lee for helpful discussions on OOD detection and robustness tasks.
11
References
[1] Chen, R. T., Behrmann, J., Duvenaud, D. K., and Jacobsen, J.-H. Residual flows for invertible
generative modeling. In Advances in Neural Information Processing Systems, pp. 9916–9926,
2019.
[2] Chen, T., Kornblith, S., Norouzi, M., and Hinton, G. A simple framework for contrastive
learning of visual representations. arXiv preprint arXiv:2002.05709, 2020.
[3] Chen, T., Kornblith, S., Swersky, K., Norouzi, M., and Hinton, G. Big self-supervised models
are strong semi-supervised learners. arXiv preprint arXiv:2006.10029, 2020.
[4] Chen, X., Fan, H., Girshick, R., and He, K. Improved baselines with momentum contrastive
learning. arXiv preprint arXiv:2003.04297, 2020.
[5] Deng, J., Dong, W., Socher, R., Li, L.-J., Li, K., and Fei-Fei, L. Imagenet: A large-scale hierar-
chical image database. In 2009 IEEE conference on computer vision and pattern recognition,
pp. 248–255. Ieee, 2009.
[6] Du, Y. and Mordatch, I. Implicit generation and modeling with energy based models. In
Advances in Neural Information Processing Systems, pp. 3608–3618, 2019.
[7] Goodfellow, I. J., Shlens, J., and Szegedy, C. Explaining and harnessing adversarial examples.
arXiv preprint arXiv:1412.6572, 2014.
[8] Grathwohl, W., Wang, K.-C., Jacobsen, J.-H., Duvenaud, D., Norouzi, M., and Swersky, K.
Your classifier is secretly an energy based model and you should treat it like one. arXiv preprint
arXiv:1912.03263, 2019.
[9] Grill, J.-B., Strub, F., Altché, F., Tallec, C., Richemond, P. H., Buchatskaya, E., Doersch, C.,
Pires, B. A., Guo, Z. D., Azar, M. G., et al. Bootstrap your own latent: A new approach to
self-supervised learning. arXiv preprint arXiv:2006.07733, 2020.
[10] Guo, C., Pleiss, G., Sun, Y., and Weinberger, K. Q. On calibration of modern neural networks.
arXiv preprint arXiv:1706.04599, 2017.
[11] Gutmann, M. and Hyvärinen, A. Noise-contrastive estimation: A new estimation principle for
unnormalized statistical models. In Proceedings of the Thirteenth International Conference on
Artificial Intelligence and Statistics, pp. 297–304, 2010.
[12] Gutmann, M. U. and Hyvärinen, A. Noise-contrastive estimation of unnormalized statistical
models, with applications to natural image statistics. Journal of Machine Learning Research,
13(Feb):307–361, 2012.
[13] Han, T., Xie, W., and Zisserman, A. Video representation learning by dense predictive coding.
In Proceedings of the IEEE International Conference on Computer Vision Workshops, pp. 0–0,
2019.
[14] He, K., Zhang, X., Ren, S., and Sun, J. Deep residual learning for image recognition. In
Proceedings of the IEEE conference on computer vision and pattern recognition, pp. 770–778,
2016.
[15] He, K., Fan, H., Wu, Y., Xie, S., and Girshick, R. Momentum contrast for unsupervised visual
representation learning. arXiv preprint arXiv:1911.05722, 2019.
[16] Hendrycks, D. and Gimpel, K. A baseline for detecting misclassified and out-of-distribution
examples in neural networks. arXiv preprint arXiv:1610.02136, 2016.
[17] Heusel, M., Ramsauer, H., Unterthiner, T., Nessler, B., and Hochreiter, S. Gans trained by a two
time-scale update rule converge to a local nash equilibrium. In Advances in neural information
processing systems, pp. 6626–6637, 2017.
[18] Hinton, G., Vinyals, O., and Dean, J. Distilling the knowledge in a neural network. arXiv
preprint arXiv:1503.02531, 2015.
12
[19] Hinton, G. E. Training products of experts by minimizing contrastive divergence. Neural
computation, 14(8):1771–1800, 2002.
[20] Ioffe, S. and Szegedy, C. Batch normalization: Accelerating deep network training by reducing
internal covariate shift. arXiv preprint arXiv:1502.03167, 2015.
[21] Khosla, P., Teterwak, P., Wang, C., Sarna, A., Tian, Y., Isola, P., Maschinot, A., Liu, C., and
Krishnan, D. Supervised contrastive learning. arXiv preprint arXiv:2004.11362, 2020.
[22] Kingma, D. P. and Dhariwal, P. Glow: Generative flow with invertible 1x1 convolutions. In
Advances in neural information processing systems, pp. 10215–10224, 2018.
[23] Krizhevsky, A. et al. Learning multiple layers of features from tiny images. 2009.
[24] Lasserre, J. A., Bishop, C. M., and Minka, T. P. Principled hybrids of generative and discrimi-
native models. In 2006 IEEE Computer Society Conference on Computer Vision and Pattern
Recognition (CVPR’06), volume 1, pp. 87–94. IEEE, 2006.
[25] LeCun, Y., Chopra, S., Hadsell, R., Ranzato, M., and Huang, F. A tutorial on energy-based
learning. 2006.
[26] Liu, Z., Luo, P., Wang, X., and Tang, X. Deep learning face attributes in the wild. In Proceedings
of the IEEE international conference on computer vision, pp. 3730–3738, 2015.
[27] Madry, A., Makelov, A., Schmidt, L., Tsipras, D., and Vladu, A. Towards deep learning models
resistant to adversarial attacks. arXiv preprint arXiv:1706.06083, 2017.
[28] Mikolov, T., Sutskever, I., Chen, K., Corrado, G. S., and Dean, J. Distributed representations of
words and phrases and their compositionality. In Advances in neural information processing
systems, pp. 3111–3119, 2013.
[29] Miyato, T., Kataoka, T., Koyama, M., and Yoshida, Y. Spectral normalization for generative
adversarial networks. arXiv preprint arXiv:1802.05957, 2018.
[30] Mnih, A. and Kavukcuoglu, K. Learning word embeddings efficiently with noise-contrastive
estimation. In Advances in neural information processing systems, pp. 2265–2273, 2013.
[31] Müller, R., Kornblith, S., and Hinton, G. E. When does label smoothing help? In Advances in
Neural Information Processing Systems, pp. 4696–4705, 2019.
[32] Netzer, Y., Wang, T., Coates, A., Bissacco, A., Wu, B., and Ng, A. Y. Reading digits in natural
images with unsupervised feature learning. 2011.
[33] Ng, A. Y. and Jordan, M. I. On discriminative vs. generative classifiers: A comparison of
logistic regression and naive bayes. In Advances in neural information processing systems, pp.
841–848, 2002.
[34] Nijkamp, E., Hill, M., Zhu, S.-C., and Wu, Y. N. Learning non-convergent non-persistent
short-run mcmc toward energy-based model. In Advances in Neural Information Processing
Systems, pp. 5232–5242, 2019.
[35] Oord, A. v. d., Li, Y., and Vinyals, O. Representation learning with contrastive predictive coding.
arXiv preprint arXiv:1807.03748, 2018.
[36] Paszke, A., Gross, S., Massa, F., Lerer, A., Bradbury, J., Chanan, G., Killeen, T., Lin, Z.,
Gimelshein, N., Antiga, L., et al. Pytorch: An imperative style, high-performance deep learning
library. In Advances in Neural Information Processing Systems, pp. 8024–8035, 2019.
[37] Raina, R., Shen, Y., Mccallum, A., and Ng, A. Y. Classification with hybrid generative/dis-
criminative models. In Advances in neural information processing systems, pp. 545–552,
2004.
[38] Salakhutdinov, R. and Hinton, G. Learning a nonlinear embedding by preserving class neigh-
bourhood structure. In Artificial Intelligence and Statistics, pp. 412–419, 2007.
13
[39] Salimans, T., Goodfellow, I., Zaremba, W., Cheung, V., Radford, A., and Chen, X. Improved
techniques for training gans. In Advances in neural information processing systems, pp. 2234–
2242, 2016.
[40] Santurkar, S., Ilyas, A., Tsipras, D., Engstrom, L., Tran, B., and Madry, A. Image synthesis
with a single (robust) classifier. In Advances in Neural Information Processing Systems, pp.
1262–1273, 2019.
[41] Simonyan, K. and Zisserman, A. Very deep convolutional networks for large-scale image
recognition. arXiv preprint arXiv:1409.1556, 2014.
[42] Song, Y. and Ermon, S. Generative modeling by estimating gradients of the data distribution.
In Advances in Neural Information Processing Systems, pp. 11918–11930, 2019.
[43] Srivastava, R. K., Greff, K., and Schmidhuber, J. Highway networks. arXiv preprint
arXiv:1505.00387, 2015.
[44] Szegedy, C., Vanhoucke, V., Ioffe, S., Shlens, J., and Wojna, Z. Rethinking the inception
architecture for computer vision. In Proceedings of the IEEE conference on computer vision
and pattern recognition, pp. 2818–2826, 2016.
[45] Tian, Y., Krishnan, D., and Isola, P. Contrastive representation distillation. arXiv preprint
arXiv:1910.10699, 2019.
[46] Tieleman, T. Training restricted boltzmann machines using approximations to the likelihood
gradient. In Proceedings of the 25th international conference on Machine learning, pp. 1064–
1071, 2008.
[47] Welling, M. and Teh, Y. W. Bayesian learning via stochastic gradient langevin dynamics. In
Proceedings of the 28th international conference on machine learning (ICML-11), pp. 681–688,
2011.
[48] Wu, Z., Xiong, Y., Yu, S., and Lin, D. Unsupervised feature learning via non-parametric
instance-level discrimination. arXiv preprint arXiv:1805.01978, 2018.
[49] Xie, J., Lu, Y., Zhu, S.-C., and Wu, Y. A theory of generative convnet. In International
Conference on Machine Learning, pp. 2635–2644, 2016.
[50] Zagoruyko, S. and Komodakis, N. Wide residual networks. arXiv preprint arXiv:1605.07146,
2016.
14
	1 Introduction
	2 Background
	2.1 Supervised learning
	2.2 Energy-based models
	2.3 Contrastive Learning
	3 Hybrid Discriminative Generative Energy-based Model (HDGE)
	4 Experiment
	4.1 Image classification
	4.2 Out-of-distribution detection
	4.2.1 Input density p(x)
	4.2.2 Predictive Distribution p(y|x)
	4.3 Calibration
	4.4 Adversarial robustness
	4.5 Goodness of approximation
	4.6 Generative modeling tasks
	5 Related work
	6 Conclusion
	7 Acknowledgement